// <auto-generated />
using System;
using Ecom.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecom.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250210071204_addSalt")]
    partial class addSalt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecom.Entity.account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("dia_chi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("gioi_tinh")
                        .HasColumnType("bit");

                    b.Property<bool?>("is_super_admin")
                        .HasColumnType("bit");

                    b.Property<string>("mat_khau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ngay_sinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("so_dien_thoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tai_khoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("trang_thai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("Ecom.Entity.account_giam_gia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("account_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ma_Giam_GiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ma_giam_gia_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("accountId");

                    b.HasIndex("ma_Giam_GiaId");

                    b.ToTable("account_giam_gia");
                });

            modelBuilder.Entity("Ecom.Entity.anh_san_pham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duong_dan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("san_phamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("san_phamId");

                    b.ToTable("anh_san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_don_hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Don_HangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("San_phamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("don_hang_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("so_luong")
                        .HasColumnType("int");

                    b.Property<decimal?>("thanh_tien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Don_HangId");

                    b.HasIndex("San_phamId");

                    b.ToTable("chi_tiet_don_hang");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_gio_hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("chi_tiet_san_phamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("chi_tiet_san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("nguoi_dung_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("accountId");

                    b.HasIndex("chi_tiet_san_phamId");

                    b.ToTable("chi_tiet_gio_hang");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_san_pham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU_san_pham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("San_PhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("can_cang")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("chieu_dai")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("chieu_rong")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("gia")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("gia_khuyen_mai")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("kho_hang")
                        .HasColumnType("int");

                    b.Property<string>("mau_sac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("San_PhamId");

                    b.ToTable("chi_tiet_san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.chuong_trinh_marketing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cong_cu")
                        .HasColumnType("int");

                    b.Property<Guid>("ma_giam_giaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ma_giam_gia_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ma_giam_giaId");

                    b.ToTable("chuong_trinh_marketing");
                });

            modelBuilder.Entity("Ecom.Entity.danh_gia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Chi_Tiet_San_PhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("chi_tiet_san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("danh_gia_chat_luong")
                        .HasColumnType("int");

                    b.Property<Guid>("nguoi_dung_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("noi_dung_danh_gia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Chi_Tiet_San_PhamId");

                    b.ToTable("danh_gia");
                });

            modelBuilder.Entity("Ecom.Entity.danh_muc_san_pham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ma_danh_muc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ten_danh_muc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("danh_muc_san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.don_hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("dvvcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dvvc_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("giam_gia_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ma_don_hang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ma_giam_giaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ngay_mua")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("nguoi_dung_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("thanh_tien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("tong_tien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("trang_thai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("dvvcId");

                    b.HasIndex("ma_giam_giaId");

                    b.ToTable("don_hang");
                });

            modelBuilder.Entity("Ecom.Entity.dvvc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dvvc");
                });

            modelBuilder.Entity("Ecom.Entity.gio_hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("nguoi_dung_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("accountId");

                    b.ToTable("gio_hang");
                });

            modelBuilder.Entity("Ecom.Entity.ma_giam_gia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("giam_gia")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<bool>("loai_giam_gia")
                        .HasColumnType("bit");

                    b.Property<int?>("so_luong")
                        .HasColumnType("int");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("thoi_gian_ap_dung_den")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("thoi_gian_ap_dung_tu")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ma_giam_gia");
                });

            modelBuilder.Entity("Ecom.Entity.san_pham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("danh_muc_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("danh_muc_san_phamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("luot_ban")
                        .HasColumnType("int");

                    b.Property<string>("ma_san_pham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mo_ta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ten_san_pham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xuat_xu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("danh_muc_san_phamId");

                    b.ToTable("san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.san_pham_marketing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Chi_Tiet_San_PhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Chuong_Trinh_MarketingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("chi_tiet_san_pham_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("chuong_trinh_marketing_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("gia_goc")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("gia_sau_giam")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("giam_gia")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<int?>("so_luong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Chi_Tiet_San_PhamId");

                    b.HasIndex("Chuong_Trinh_MarketingId");

                    b.ToTable("san_pham_marketing");
                });

            modelBuilder.Entity("Ecom.Entity.thong_bao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("nguoi_dung_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("nhom")
                        .HasColumnType("int");

                    b.Property<string>("noi_dung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("thoi_gian_doc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("trang_thai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("accountId");

                    b.ToTable("thong_bao");
                });

            modelBuilder.Entity("Ecom.Entity.account_giam_gia", b =>
                {
                    b.HasOne("Ecom.Entity.account", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.ma_giam_gia", "ma_Giam_Gia")
                        .WithMany()
                        .HasForeignKey("ma_Giam_GiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("ma_Giam_Gia");
                });

            modelBuilder.Entity("Ecom.Entity.anh_san_pham", b =>
                {
                    b.HasOne("Ecom.Entity.san_pham", "san_pham")
                        .WithMany()
                        .HasForeignKey("san_phamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_don_hang", b =>
                {
                    b.HasOne("Ecom.Entity.don_hang", "Don_Hang")
                        .WithMany()
                        .HasForeignKey("Don_HangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.san_pham", "San_pham")
                        .WithMany()
                        .HasForeignKey("San_phamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Don_Hang");

                    b.Navigation("San_pham");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_gio_hang", b =>
                {
                    b.HasOne("Ecom.Entity.account", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.chi_tiet_san_pham", "chi_tiet_san_pham")
                        .WithMany()
                        .HasForeignKey("chi_tiet_san_phamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("chi_tiet_san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.chi_tiet_san_pham", b =>
                {
                    b.HasOne("Ecom.Entity.san_pham", "San_Pham")
                        .WithMany()
                        .HasForeignKey("San_PhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("San_Pham");
                });

            modelBuilder.Entity("Ecom.Entity.chuong_trinh_marketing", b =>
                {
                    b.HasOne("Ecom.Entity.ma_giam_gia", "ma_giam_gia")
                        .WithMany()
                        .HasForeignKey("ma_giam_giaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ma_giam_gia");
                });

            modelBuilder.Entity("Ecom.Entity.danh_gia", b =>
                {
                    b.HasOne("Ecom.Entity.account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.chi_tiet_san_pham", "Chi_Tiet_San_Pham")
                        .WithMany()
                        .HasForeignKey("Chi_Tiet_San_PhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Chi_Tiet_San_Pham");
                });

            modelBuilder.Entity("Ecom.Entity.don_hang", b =>
                {
                    b.HasOne("Ecom.Entity.account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.dvvc", "dvvc")
                        .WithMany()
                        .HasForeignKey("dvvcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.ma_giam_gia", "ma_giam_gia")
                        .WithMany()
                        .HasForeignKey("ma_giam_giaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("dvvc");

                    b.Navigation("ma_giam_gia");
                });

            modelBuilder.Entity("Ecom.Entity.gio_hang", b =>
                {
                    b.HasOne("Ecom.Entity.account", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });

            modelBuilder.Entity("Ecom.Entity.san_pham", b =>
                {
                    b.HasOne("Ecom.Entity.danh_muc_san_pham", "danh_muc_san_pham")
                        .WithMany()
                        .HasForeignKey("danh_muc_san_phamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("danh_muc_san_pham");
                });

            modelBuilder.Entity("Ecom.Entity.san_pham_marketing", b =>
                {
                    b.HasOne("Ecom.Entity.chi_tiet_san_pham", "Chi_Tiet_San_Pham")
                        .WithMany()
                        .HasForeignKey("Chi_Tiet_San_PhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecom.Entity.chuong_trinh_marketing", "Chuong_Trinh_Marketing")
                        .WithMany()
                        .HasForeignKey("Chuong_Trinh_MarketingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chi_Tiet_San_Pham");

                    b.Navigation("Chuong_Trinh_Marketing");
                });

            modelBuilder.Entity("Ecom.Entity.thong_bao", b =>
                {
                    b.HasOne("Ecom.Entity.account", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });
#pragma warning restore 612, 618
        }
    }
}
